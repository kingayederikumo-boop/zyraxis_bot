from telegram.ext import CommandHandler
from backend.utils.db import get_or_create_user, save_image, get_daily_counters, increment_counter
from backend.services.image_gen import generate_image

IMAGE_LIMIT_FREE = 3

def register_image_handlers(app):
    app.add_handler(CommandHandler('genimage', genimage))

async def genimage(update, context):
    user_id = update.effective_user.id
    get_or_create_user(user_id)
    # check limit
    counters = get_daily_counters(user_id)
    if counters['images_today'] >= IMAGE_LIMIT_FREE and not bool(get_or_create_user(user_id).get('is_premium')):
        return await update.message.reply_text("Daily image limit reached (3). Upgrade for more.")
    prompt = ' '.join(context.args) if context.args else None
    if not prompt:
        return await update.message.reply_text("Usage: /genimage <prompt>")
    await update.message.chat_action('upload_photo')
    url = generate_image(prompt)
    if not url:
        return await update.message.reply_text("Image generation failed.")
    save_image(user_id, url, prompt)
    increment_counter(user_id, 'images')
    await update.message.reply_photo(photo=url, caption="Generated by ZyraXis")
